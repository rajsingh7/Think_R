data <- cbind.data.frame(
Age = c(127,115,127,150,156,182,156,132,137,113,137,117,137,153,117,126,170,182,162,184,143,159,108,175,108,179,111,187,111,115,194,168),
NumBiders = c(13,12,7,9,6,11,12,10,9,9,15,11,8,6,13,10,14,8,11,10,6,9,14,8,6,9,15,8,7,7,5,7),
Price = c(1235,1080,845,1522,1047,1979,1822,1253,1297,946,1713,1024,1147,1092,1152,1336,2131,1550,1884,2041,845,1483,1055,1545,729,1792,1175,1593,785,744,1356,1262))
X = as.matrix(cbind(rep(1,nrow(data)),data[,c("Age","NumBiders")]))
Y = as.matrix(data[,"Price"])
beta = solve(t(X) %*% X) %*% (t(X) %*% Y)
beta
model <- lm(Price~., data)
summary(model)
anova(model)
summary(model)
x = qnorm(seq(0,1,0.1), mean(data$Price) , sd(data$Price))
y <- quantile(data$Price, probs = seq(0,1,0.1) ,type = 6)
plot(x,y, pch = 19)
abline(0,1)
qqnorm(data$Price)
SSE <- sum((data$Price - model$fitted.values)^2)
MSE <- SSE/(model$df.residual)
RMSE <- sqrt(MSE)
RMSE
SSyy <- sum((data$Price - mean(data$Price))^2)
k = ncol(data) -1
Fstatistic <- ((SSyy - SSE)/k)/MSE
summary(model)
Fstatistic
pf(Fstatistic,2,nrow(data)-2,lower.tail = F)
pf(Fstatistic,2,nrow(data)-3,lower.tail = F)
k
pf(Fstatistic,k,n-k-1,lower.tail = F)
SSyy <- sum((data$Price - mean(data$Price))^2)
k = ncol(data) -1
n = nrow(data)
Fstatistic <- ((SSyy - SSE)/k)/MSE
summary(model)
Fstatistic
pf(Fstatistic,k,n-k-1,lower.tail = F)
summary(model)
sqrt(sum(summary(model)$residuals^2)/(N-model
sqrt(sum(summary(model)$residuals^2)/(n-k-1)
sqrt(sum(summary(model)$residuals^2)/(n-k-1))
sqrt(sum(summary(model)$residuals^2))/(n-k-1)
SSE
RMSE
summary(model)$residuals
sum(summary(model)$residuals^2)
SSE
sqrt(sum(summary(model)$residuals^2)/(n-k-1))
RMSE
summary(lm(Price~.,data))$r.squared
names(data)
summary(lm(Age~NumBiders, data))$r.squared
rSquared.AgeByNumBiders <- summary(lm(Age~NumBiders, data))$r.squared
rSquared.Whole <- summary(lm(Price~.,data))$r.squared
Sy
SSy
sd(data$Price)
Syy
Sb2 <- RMSE/sqrt((1-rSquared.AgeByNumBiders)*Sigma_Age^2*(n-1))
rSquared.Whole <- summary(lm(Price~.,data))$r.squared
rSquared.AgeByNumBiders <- summary(lm(Age~NumBiders, data))$r.squared
Sigma_Price <- sd(data$Price)
Sigma_Age <- sd(data$Age)
Sb2 <- RMSE/sqrt((1-rSquared.AgeByNumBiders)*Sigma_Age^2*(n-1))
summary(model)
Sb2
Sigma_Price/Sigma_Age*sqrt((1-rSquared.Whole)/((1-rSquared.AgeByNumBiders)*(n-k-1)))
rSquared.Whole <- summary(lm(Price~.,data))$r.squared
rSquared.AgeByNumBiders <- summary(lm(Age~NumBiders, data))$r.squared
Sigma_Price <- sd(data$Price)
Sigma_Age <- sd(data$Age)
SE_beta_Age <- RMSE/sqrt((1-rSquared.AgeByNumBiders)*Sigma_Age^2*(n-1))
SE_beta_Age
Sigma_Price/Sigma_Age*sqrt((1-rSquared.Whole)/((1-rSquared.AgeByNumBiders)*(n-k-1)))
summary(model)
qt(12.7406/SE_beta_Age, df = (n-k-1), lower.tail = T)
pt(12.7406/SE_beta_Age, df = (n-k-1), lower.tail = T)
pt(12.7406/SE_beta_Age, df = (n-k-1), lower.tail = F)
2*pt(12.7406/SE_beta_Age, df = (n-k-1), lower.tail = F)
confint(model)
SSyy
SSE/SSyy
1-SSE/SSyy
summary(model)
1 - SSE/SSyy
adj.rSquared <- 1- (n-1)/(n-k-1)*(1-rSquared)
adj.rSquared
rSquared <- 1 - SSE/SSyy
rSquared
adj.rSquared <- 1- (n-1)/(n-k-1)*(1-rSquared)
adj.rSquared
min(data$Age)
data$Age
data <- data.frame(Age = 150, numBiders = 10)
data
newData <- data.frame(Age = 150, numBiders = 10)
data <- cbind.data.frame(
Age = c(127,115,127,150,156,182,156,132,137,113,137,117,137,153,117,126,170,182,162,184,143,159,108,175,108,179,111,187,111,115,194,168),
NumBiders = c(13,12,7,9,6,11,12,10,9,9,15,11,8,6,13,10,14,8,11,10,6,9,14,8,6,9,15,8,7,7,5,7),
Price = c(1235,1080,845,1522,1047,1979,1822,1253,1297,946,1713,1024,1147,1092,1152,1336,2131,1550,1884,2041,845,1483,1055,1545,729,1792,1175,1593,785,744,1356,1262))
mutatedData <- data
summInfo <- summary(lm(Price~., mutatedData))
model$coefficients %*% c(1,150,10)
ynullhat <- model$coefficients %*% c(1,150,10)
ynullhat + c(qt(0.025, 4),-qt(0.025, 4))*summInfo$coefficients[1,2]
ynullhat + qt(0.025, n-k-1) * summInfo$coefficients[1,2] * c(1, -1)
ynullhat + qt(0.025, n-k-1) * sqrt(summInfo$coefficients[1,2]^2+summInfo$sigma^2) * c(1,-1)
predict(model, newData, interval = "confidence")
data
names(data)
newData <- data.frame(Age = 150, NumBiders = 10)
mutatedData <- data
mutatedData$Age <- data$Age - 150
mutatedData$NumBiders <- data$NumBiders - 10
summInfo <- summary(lm(Price~., mutatedData))
ynullhat <- model$coefficients %*% c(1,150,10)
ynullhat + qt(0.025, n-k-1) * summInfo$coefficients[1,2] * c(1, -1)
ynullhat + qt(0.025, n-k-1) * sqrt(summInfo$coefficients[1,2]^2+summInfo$sigma^2) * c(1,-1)
predict(model, newData, interval = "confidence")
predict(model, newData, interval = "prediction")
library(png)
install.packages("png")
library(grid)
library(png)
library(grid)
img <- readPNG("BasicProcedure3.png")
grid.raster(img)
setwd("D:/GithubRepos/Think_R/2015 R Study Group/Sep 23th")
library(png)
library(grid)
img <- readPNG("/BasicProcedure3.png")
grid.raster(img)
library(png)
library(grid)
img <- readPNG("BasicProcedure3.png")
grid.raster(img)
houseData <- read.csv("Data.csv")
houseData
houseData <- read.csv("Data.csv")
X = as.matrix(cbind(rep(1,nrow(houseData)),houseData[,3:5]))
Y = as.matrix(houseData$Price)
beta = solve(t(X) %*% X) %*% (t(X) %*% Y)
beta
lm(Price~Sq.Feet+Beds+Baths, houseData)
lm(Price~Sq.Feet+Beds+Baths, houseData)
model <- lm(Price~Sq.Feet+Beds+Baths, houseData)
model
model$coefficients
beta
t(beta)
df <- as.data.frame(a = c(1,2,3))
df <- data.frame(a = c(1,2,3))
df
df <- data.frame(a = c(1,2,3), b = c("A","B","C"))
df
names(df)
names(df)[2] <- "River/Creek"
df
df$a
df$`River/Creek`
df$River/Creek
df$"River/Creek"
houseData <- read.csv("Data.csv")
data <- houseData
data$IT1 <- data$Beds/data$Sq.Feet
data$IT2 <- data$Baths/data$Sq.Feet
data$IT3 <- data$Beds*data$Baths
data$IT4 <- data$Beds*data$Baths/data$Sq.Feet
data$IT5 <- data$Sq.Feet^2
data$Beds <- as.factor(as.character(data$Beds))
data$Baths <- as.factor(as.character(data$Baths))
g <- lm(Price~.-Address-Baths,data)
summary(g)
summary(g)
d = summary(g)
d$adj.r.squared
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean2 <- function(data){
s = sum(data)
n = length(data)
return(s/n)
}
myMean2(data)
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean2 <- function(data){
s = sum(data)
n = length(data)
return s/n
}
myMean2(data)
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean2 <- function(data){
sum = sum(data)
n = length(data)
mean = sum/n
return(mean)
}
myMean2(data)
data
rm(data)
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean2 <- function(data){
sum = sum(data)
n = length(data)
mean = sum/n
return(mean)
}
myMean2(data)
```{r, echo=2:10}
rm(data)
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean2 <- function(data){
s = sum(data)
n = length(data)
m = s/n
return(m)
}
myMean2(data)
conflicts()
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean2 <- function(data){
s = sum(data)
n = length(data)
m = s/n
return(m)
}
myMean2(data)
myMean <- function(data) sum(data)/length(data)
myMean(rnorm(999,10,1.2))
myMean2 <- function(data){
s = sum(data)
n = length(data)
m = s/n
return(m)
}
myMean2(data)
myMean2(rpois(999,lambda = 0.4,beta=10))
myMean2(rpois(999,lambda = 10,beta=10))
myMean2(rpois(999,lambda = 10,beta=.1))
myMean2(seq(100,200,2))
